{
  "package_name": "pprof",
  "patch_versions": [
    "0.14.0"
  ],
  "vulnerable_ranges": [
    [
      "0.1.0",
      "0.13.0"
    ]
  ],
  "cwe": [
    "CWE-400"
  ],
  "tldr": "Affected versions of this package misuse the unsafe `std::slice::from_raw_parts` API, breaking safety assumptions. In `TempFdArrayIterator.next`, a generic type can create and pass a misaligned pointer. Additionally, using `c_void` for address validation can expose uninitialized memory. These issues highlight the need for proper type checks before type conversions with unsafe APIs. Exploiting this vulnerability can cause a panic, potentially leading to a Denial of Service (DoS) in applications like `greptimedb` when using `pprof::report::ReportBuilder::build` or `pprof::validate`.",
  "doest_this_affect_me": "You are affected if you are using a version that falls within the vulnerable range.",
  "how_to_fix": "Upgrade the `pprof` library to the patch version.",
  "reporter": "",
  "vulnerable_to": "Denial of Service (DoS)",
  "related_cve_id": "",
  "language": "rust",
  "severity_class": "LOW",
  "aikido_score": 35,
  "changelog": "https://rustsec.org/advisories/RUSTSEC-2024-0408.html",
  "package_name_alias": null,
  "package_wildcard_ends_in": null,
  "package_wildcard_contains": null,
  "extra_specific_non_vulnerable_versions": null,
  "unaffected_distros": null,
  "simplify_version_if_has_patch_part": false,
  "published": "2024-12-05 11:30",
  "last_modified": "2024-12-05 11:30"
}