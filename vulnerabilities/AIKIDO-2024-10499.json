{
  "id" : "AIKIDO-2024-10499",
  "package_name" : "jsonata",
  "patch_versions" : [ "2.0.6" ],
  "vulnerable_ranges" : [ [ "1.8.0", "2.0.5" ] ],
  "cwe" : [ "CWE-200" ],
  "tldr" : "Certain internal, undocumented APIs in JSONata, useful for debugging and imposing time or depth constraints on queries, should only be accessible programmatically and not within a query itself. Allowing access from within queries can enable attackers to bypass these constraints, potentially leading to targeted attacks. By changing the binding keys to `Symbol`, these internal APIs become inaccessible inside queries, as the `Symbol` API cannot be referenced there. This prevents queries from manipulating or removing important diagnostics or constraints. The solution leverages `Symbol.for` to maintain a separation between public and internal functionality, enhancing security with minimal changes.",
  "doest_this_affect_me" : "You are affected if you are using a version that falls within the vulnerable range.",
  "how_to_fix" : "Upgrade the `jsonata` library to the patch version.",
  "reporter" : "",
  "vulnerable_to" : "Exposure of Sensitive Information",
  "related_cve_id" : "",
  "language" : "js",
  "severity_class" : "LOW",
  "aikido_score" : 21,
  "changelog" : "https://github.com/jsonata-js/jsonata/releases/tag/v2.0.6",
  "package_name_alias" : null,
  "package_wildcard_ends_in" : null,
  "package_wildcard_contains" : null,
  "extra_specific_non_vulnerable_versions" : null,
  "unaffected_distros" : null,
  "simplify_version_if_has_patch_part" : false,
  "published" : "2024-12-02 09:15",
  "last_modified" : "2024-12-02 09:15"
}